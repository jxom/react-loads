{"version":3,"file":"main.def5e812844bb63b248e.bundle.js","sources":["webpack:///./src/hooks/useTimeout.ts"],"sourcesContent":["import * as React from 'react';\n\nexport default function useTimeout() {\n  const timeout = React.useRef<number | undefined>(undefined);\n\n  const _setTimeout = React.useCallback((fn, ms: number) => {\n    // @ts-ignore\n    timeout.current = setTimeout(fn, ms);\n  }, []);\n  const _clearTimeout = React.useCallback(() => clearTimeout(timeout.current), []);\n\n  React.useEffect(() => {\n    return function cleanup() {\n      if (timeout) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []);\n\n  return [_setTimeout, _clearTimeout];\n}\n"],"mappings":"AAEA","sourceRoot":""}